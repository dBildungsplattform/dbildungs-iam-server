nameOverride: ""
fullnameOverride: ""
namespaceOverride: ""

backendHostname: ""
keycloakHostname: ""

containerSecurityContext:
  enabled: true
  runAsUser: 1000
  runAsNonRoot: true
  privileged: false
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]
  seccompProfile:
    type: "RuntimeDefault"

restartPolicy: Always
environment: prod

database:
  name: "dbildungs_iam_server"
  host: ""
  password: ""
  username: "dbildungs_iam_server"

auth:
  # existingSecret: Refers to a secret already present in the cluster, which is required.
  existingSecret: ""
  secretName: dbildungs-iam-server
  keycloak_adminSecret: ""
  keycloak_clientSecret: ""
  secrets_json: ""
  frontend_sessionSecret: ""


backend:
  replicaCount: 1
  image:
    repository: ghcr.io/dbildungsplattform/dbildungs-iam-server
    tag: ""
    pullPolicy: Always
  containerPorts:
    http: 8080
  resources:
    limits:
      cpu: 2
      memory: 4G
    requests:
      cpu: 200m
      memory: 200Mi
  startupProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 60
    failureThreshold: 5
    httpGet:
      scheme: 'HTTP'
      port: 8080
      path: '/health'
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    httpGet:
      scheme: 'HTTP'
      port: 8080
      path: '/health'
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    httpGet:
      scheme: 'HTTP'
      port: 8080
      path: '/health'
  dbseeding:
    enabled: true
    command: [ "node", "dist/src/console/main.js", "db", "seed", "dev", "" ]
  ingress:
    enabled: true
    ingressClassName: nginx
    pathType: Prefix
    portnumber: 80
    automountServiceAccountToken: false
    paths:
      - /api
      - /docs
      - /docs-json
      - /docs-yaml
    annotations: []
  service:
    type: ClusterIP
    ports:
      http: 80
  serviceMonitor:
    enabled: true
    endpoints:
      - port: "web"
  extraEnvVars: []
  extraVolumes: []
  volumeMounts:
    - mountPath: /app/config/config.json
      subPath: config-json
      name: config-volume
      readOnly: true
    - mountPath: /app/config/secrets.json
      subPath: secrets-json
      name: secret-volume
  extraVolumeMounts: []


redis:
  image:
    name: redis
    repository: redis
    tag: "7.2.4"
    pullPolicy: IfNotPresent
  args:
    - "/data/tls/redis.conf"
  containerPorts:
    redis: 6379
  resources:
    limits:
      cpu: 2
      memory: 4G
    requests:
      cpu: 200m
      memory: 200Mi
  livenessProbe:
    enabled: true
    tcpSocket:
      port: 6379
    initialDelaySeconds: 15
    timeoutSeconds: 2
  readinessProbe:
    enabled: true
    tcpSocket:
      port: 6379
    initialDelaySeconds: 5
    timeoutSeconds: 1
  startupProbe:
    enabled: true
    tcpSocket:
      port: 6379
    failureThreshold: 30
    periodSeconds: 10
  service:
    type: ClusterIP
    ports:
      redis: 6379
  extraEnvVars: []
  extraVolumes: []
  extraVolumeMounts: []

ldap:
  image:
    repository: docker.io/osixia/openldap
    tag: "1.5.0"
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 2
      memory: 4G
      ephemeral-storage: 2Gi
    requests:
      cpu: 200m
      memory: 200Mi
  adminPassword: admin
  configPassword: config
  service:
    type: ClusterIP
    ports:
      ldap: 389

ldapadmin:
  image:
    repository: docker.io/osixia/phpldapadmin
    tag: "0.9.0"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    ports:
      ldapadmin: 9007
