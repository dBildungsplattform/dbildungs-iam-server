version: '3'

services:
  db:
    image: postgres:15.3-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=dbildungs-iam-server
    profiles:
      - minimal
      - backend-only
      - fe-datum
      - full

  keycloak:
    image: ghcr.io/dbildungsplattform/dbildungs-iam-keycloak:latest
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - PI_ADMIN_USER=admin
      - PI_ADMIN_PASSWORD=admin
      - PI_REALM=defrealm
      - PI_BASE_URL=http://privacy-idea:8080
      - STATUS_REDIRECT_URL=https://status.dev.spsh.dbildungsplattform.de/
    entrypoint: '/opt/keycloak/bin/kc.sh start-dev'
    command:
      # Internal DB but still persisted in container
      - '--db=dev-file'
      # No caching
      - '--cache=local'
      # We have no way of checking for the health probe so we might just as well turn it off
      - '--health-enabled=false'
      # Import SPSH-Realm
      - '--import-realm'
    ports:
      - 8080:8080
      - 8443:8443
    volumes:
      - ./config/dev-realm-spsh.json:/opt/keycloak/data/import/realm.json
    profiles:
      - minimal
      - backend-only
      - fe-datum
      - full

  keycloak-db-microservice:
    image: ghcr.io/dbildungsplattform/dbildungs-iam-server
    build:
      context: .
    depends_on:
      - keycloak
    environment:
      NODE_ENV: dev
      DEPLOY_STAGE: dev
    command: ['node', 'dist/src/apps/kc-db-microservice/main.js']
    ports:
      - 3000:3000
    volumes:
      - source: 'config'
        target: '/app/config'
        type: bind
    profiles:
      - minimal
      - backend-only
      - fe-datum
      - full

  redis:
    image: redis:7.2.2
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
    ports:
      - 6379:6379
    command: redis-server --requirepass password
    profiles:
      - minimal
      - backend-only
      - fe-datum
      - full

  # Default backend configuration (without Kafka)
  backend:
    image: ghcr.io/dbildungsplattform/dbildungs-iam-server
    build:
      context: .
    depends_on:
      - keycloak
      - db
      - redis
    environment:
      NODE_ENV: dev
      DEPLOY_STAGE: dev
    network_mode: host
    volumes:
      - source: 'config'
        target: '/app/config'
        type: bind
    profiles:
      - backend-only
      - fe-datum
      - full

  # Special backend configuration with Kafka dependencies
  backend-with-kafka:
    image: ghcr.io/dbildungsplattform/dbildungs-iam-server
    build:
      context: .
    depends_on:
      - keycloak
      - db
      - redis
      - kafka
      - kafka-init
    environment:
      NODE_ENV: dev
      DEPLOY_STAGE: dev
    network_mode: host
    volumes:
      - source: 'config'
        target: '/app/config'
        type: bind
    profiles:
      - full-with-kafka

  db-init:
    image: ghcr.io/dbildungsplattform/dbildungs-iam-server
    build:
      context: .
    depends_on:
      - db
    environment:
      NODE_ENV: dev
      DEPLOY_STAGE: dev
    command: ['node', 'dist/src/console/main.js', 'db', 'init']
    volumes:
      - source: 'config'
        target: '/app/config'
        type: bind
    profiles:
      - db-init
      - minimal
      - backend-only
      - fe-datum
      - full
      - full-with-kafka

  kafka:
    image: bitnami/kafka:3.9.0
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server localhost:9092 || exit 1
      start_period: 10s
      interval: 5s
    volumes:
      - kafka:/bitnami/kafka
    profiles:
      - kafka
      - full-with-kafka

  kafka-init:
    image: bitnami/kafka:3.9.0
    depends_on:
      kafka:
        condition: service_healthy
    command: /init/scripts/create_topics.sh /init-data/kafka-topics.txt
    environment:
      - KAFKA_URL=kafka:9092
      - KAFKA_TOPIC_PREFIX=local.
      - KAFKA_TOPIC_PARTITIONS=1
      - KAFKA_REPLICATION_FACTOR=1
    volumes:
      - ./charts/dbildungs-iam-server/kafka/scripts:/init/scripts:ro
      - type: bind
        source: ./config/kafka-topics.txt
        target: /init-data/kafka-topics.txt
        read_only: true
    profiles:
      - kafka
      - full-with-kafka

  openldap:
    image: osixia/openldap:1.5.0
    container_name: openldap
    command: --copy-service --loglevel debug
    ports:
      - 389:389
      - 636:636
    volumes:
      - ./config/ldif:/container/service/slapd/assets/config/bootstrap/ldif/custom
    environment:
      - LDAP_ORGANISATION=schule-sh-de
      - LDAP_DOMAIN=schule-sh.de
      - LDAP_BASE_DN=dc=schule-sh,dc=de
      - LDAP_ADMIN_PASSWORD=admin
      - LDAP_CONFIG_PASSWORD=config
      - LDAP_RFC2307BIS_SCHEMA=true
      - LDAP_REMOVE_CONFIG_AFTER_SETUP=true
      - LDAP_TLS_VERIFY_CLIENT=never
    profiles:
      - third-party
      - full
      - full-with-kafka

  openldap-admin:
    image: osixia/phpldapadmin:0.9.0
    container_name: ldap-admin
    restart: 'no'
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: openldap
      PHPLDAPADMIN_HTTPS: 'false'
    depends_on:
      - openldap
    ports:
      - 9007:80
      - 4443:443
    profiles:
      - third-party
      - full
      - full-with-kafka

  privacy-idea:
    image: khalibre/privacyidea:latest
    container_name: privacy-idea
    ports:
      - 5000:8080
    environment:
      - PI_ADMIN_USER=admin
      - PI_ADMIN_PASSWORD=admin
      - PI_DB_TYPE=mysql
      - PI_DB_HOST=mariadb
      - PI_DB_PORT=3306
      - PI_DB_NAME=ducsxqm001
      - PI_DB_USER=admin
      - PI_DB_PASSWORD=password
      - PI_DB_VENDOR=mysql
      - PI_SUPERUSER_REALM="administrator,api"
      - PI_PAGE_TITLE=Schulportal SH
      - PI_SECRET_KEY=secret
      - PI_PEPPER=pepper
      - PI_LOGLEVEL=DEBUG
    depends_on:
      maria-db:
        condition: service_healthy
    volumes:
      - ./privacyidea/encfile:/data/privacyidea/keys/encfile
      - ./privacyidea/dummy_private.pem:/data/privacyidea/keys/private.pem
      - ./privacyidea/dummy_public.pem:/data/privacyidea/keys/public.pem
    profiles:
      - privacy-idea
      - full
      - full-with-kafka

  maria-db:
    image: mariadb:latest
    container_name: mariadb
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=ducsxqm001
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=password
    healthcheck:
      test: ['CMD', 'healthcheck.sh', '--connect', '--innodb_initialized']
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - mariadb:/var/lib/mysql
      - ./privacyidea/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    profiles:
      - privacy-idea
      - full
      - full-with-kafka

  cron-service:
    build: ./charts/dbildungs-iam-server/cron
    environment:
      - KC_CLIENT_ID=spsh-service
      - KC_TOKEN_URL=http://keycloak:8080/realms/SPSH/protocol/openid-connect/token
      - BACKEND_ENDPOINT_URL=http://host.docker.internal:9090/api/cron/kopers-lock
      - HTTP_METHOD=PUT
      - JWKS_FILE_PATH=/keys/jwks.json
    volumes:
      - ./charts/dbildungs-iam-server/cron/scripts:/scripts
      - ./charts/dbildungs-iam-server/cron/keys/dummy_jwks.json:/keys/jwks.json:ro
    depends_on:
      - keycloak
    profiles:
      - backend-only
      - fe-datum
      - full
      - full-with-kafka

  frontend:
    image: ghcr.io/dbildungsplattform/schulportal-client
    ports:
      - 8099:8099
    environment:
      - NODE_ENV=dev
      - API_URL=http://localhost:9090
    working_dir: /app
    volumes:
      - .:/app
    profiles:
      - frontend
      - fe-datum
      - full
      - full-with-kafka

volumes:
  db-data:
  mariadb:
  kafka:
