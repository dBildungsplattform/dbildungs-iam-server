apiVersion: apps/v1
kind: Deployment
metadata:
  name: dbiam-deployment-bff
  labels:
    app.kubernetes.io/name: {{.Chart.Name}}
    app.kubernetes.io/version: {{.Chart.Version}}
spec:
  selector:
    matchLabels:
      layer: dbildungs-iam-bff
  replicas: {{.Values.dbildungsIamReplications}}
  template:
    metadata:
      name: dbildungs-iam
      labels:
        layer: dbildungs-iam-bff
    spec:
      containers:
        - name: dbildungs-iam-bff
          image: {{.Values.dbildungsIamContainer}}
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
          command: [ "node", "dist/src/backend-for-frontend/main.js" ]
          ports:
            - name: web
              containerPort: 8080
          env:
            - name: NODE_ENV
              value: {{.Values.environment}}
            - name: DEPLOY_STAGE
              value: {{.Values.environment}}
          volumeMounts:
            - mountPath: /app/config/
              name: config
              readOnly: true
          resources:
            requests:
              cpu: {{.Values.dbildungsIamCpuRequest}}
              memory: {{.Values.dbildungsIamMemRequest}}
            limits:
              cpu: {{.Values.dbildungsIamCpuMax}}
              memory: {{.Values.dbildungsIamMemMax}}
          livenessProbe:
            initialDelaySeconds: 120 # Redis takes a while to get ready and we'd be getting restarts otherwise
            httpGet:
              port: 8080
              scheme: 'HTTP'
              path: '/health'
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              port: 8080
              scheme: 'HTTP'
              path: '/health'
      restartPolicy: Always
      volumes:
        - name: config
          secret:
            secretName: {{.Values.secrets.name | default (print .Release.Name "-secret")}}
      