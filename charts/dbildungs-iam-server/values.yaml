nameOverride: ''
fullnameOverride: ''
namespaceOverride: ''

backendHostname: ''
keycloakHostname: ''
keycloak2ndHostname: ""
backend2ndHostname: ""

containerSecurityContext:
  enabled: true
  runAsUser: 1000
  runAsNonRoot: true
  privileged: false
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false
  capabilities:
    drop: ['ALL']
  seccompProfile:
    type: 'RuntimeDefault'

restartPolicy: Always
environment: dev

database:
  name: 'dbildungs_iam_server'
  host: ''
  password: ''
  username: 'dbildungs_iam_server'

ldap:
  url: ldap://dbildungs-iam-ldap.spsh-xxx.svc.cluster.local
  bindDN: cn=admin,dc=schule-sh,dc=de
  oeffentlicheSchulenDomain: schule-sh.de
  ersatzschulenDomain: ersatzschule-sh.de
  base_dn: dc=schule-sh,dc=de

itslearning:
  root: sh
  rootOeffentlich: oeffentlich
  rootErsatz: ersatz

auth:
  # existingSecret: Refers to a secret already present in the cluster, which is required.
  existingSecret: ''
  secretName: dbildungs-iam-server
  keycloak_adminSecret: ''
  keycloak_clientSecret: ''
  ldap_admin_password: ''
  secrets_json: ''
  frontend_sessionSecret: ''
  itslearning_enabled: ''
  itslearning_endpoint: ''
  itslearning_username: ''
  itslearning_password: ''
  pi_base_url: ''
  pi_admin_user: ''
  pi_admin_password: ''
  pi_user_resolver: ''
  pi_user_realm: ''
  redis_password: ''

backend:
  replicaCount: 1
  image:
    repository: ghcr.io/dbildungsplattform/dbildungs-iam-server
    tag: ''
    pullPolicy: Always
  containerPorts:
    http: 8080
  resources:
    limits:
      cpu: 2
      memory: 4G
    requests:
      cpu: 200m
      memory: 200Mi
  startupProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 10
    failureThreshold: 5
    httpGet:
      scheme: 'HTTP'
      port: 8080
      path: '/health'
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    httpGet:
      scheme: 'HTTP'
      port: 8080
      path: '/health'
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    httpGet:
      scheme: 'HTTP'
      port: 8080
      path: '/health'
  dbseeding:
    enabled: true
    command: ['node', 'dist/src/console/main.js', 'db', 'seed', 'dev', '']
  ingress:
    # Only enable if 2nd host name is defined
    enabled2nd: false
    enabled: true
    ingressClassName: nginx
    pathType: Prefix
    portnumber: 80
    automountServiceAccountToken: false
    paths:
      - /api
      - /docs
      - /docs-json
      - /docs-yaml
    annotations: []
  service:
    type: ClusterIP
    ports:
      http: 80
  serviceMonitor:
    enabled: true
    path: "/metrics"
    interval: 30m
    endpoints:
      - port: 'web'
  extraEnvVars: []
  extraVolumes: []
  volumeMounts:
    - mountPath: /app/config/config.json
      subPath: config-json
      name: config-volume
      readOnly: true
    - mountPath: /app/config/secrets.json
      subPath: secrets-json
      name: secret-volume
  extraVolumeMounts: []
  env:
    renameWaitingTimeInSeconds: 3
    stepUpTimeoutInSeconds: 900
    stepUpTimeoutEnabled: 'false'

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 60

podDisruptionBudget:
  enabled: true
  minAvailable: "80%"

status:
  url: 'https://status.dev.spsh.dbildungsplattform.de/'

cronjobs:
  enabled: true
  image:
    tag: DBP-1083-latest
    repository: ghcr.io/hpi-schul-cloud/cron-tools
    pullPolicy: IfNotPresent
  port: 5656
  keycloakTokenUrl: '/realms/SPSH/protocol/openid-connect/token'
  keycloakClientId: spsh-service
  jwksFilePath: /keys/jwks.json
  backendHostname: '{{ $.Values.frontendHostname }}'
  scriptDir: scripts
  jobs:
    cron-trigger-1:
      schedule: 20 0 * * *
      endpoint: '/api/cron/kopers-lock'
      httpMethod: 'PUT'
      script: 'cron_trigger.sh'
    cron-trigger-2:
      schedule: 40 0 * * *
      endpoint: '/api/cron/kontext-expired'
      httpMethod: 'PUT'
      script: 'cron_trigger.sh'
    cron-trigger-3:
      schedule: 50 0 * * *
      endpoint: '/api/cron/person-without-org'
      httpMethod: 'PUT'
      script: 'cron_trigger.sh'
    cron-trigger-4:
      schedule: 10 0 * * *
      endpoint: '/api/cron/unlock'
      httpMethod: 'PUT'
      script: 'cron_trigger.sh'
