apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dbildungs-iam.name" . }}-bff
  labels:
    {{- include "dbildungs-iam.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "dbildungs-iam.bffLayerLabel" . | nindent 6 }}
  replicas: {{ .Values.dbildungsIamReplications }}
  template:
    metadata:
      name: {{ include "dbildungs-iam.templateName" . }}
      labels:
        {{- include "dbildungs-iam.bffLayerLabel" . | nindent 8 }}
    spec:
      containers:
        - name: {{ include "dbildungs-iam.name" . }}-bff
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
          command: ["node", "dist/src/backend-for-frontend/main.js"]
          ports:
            - name: {{ include "dbildungs-iam.portName" . }}
              containerPort: 8080
          env:
            - name: NODE_ENV
              value: {{ .Values.environment }}
            - name: DEPLOY_STAGE
              value: {{ .Values.environment }}
          volumeMounts:
            - mountPath: /app/config/
              name: config
              readOnly: true
          resources:
            requests:
              cpu: {{ .Values.dbildungsIamCpuRequest }}
              memory: {{ .Values.dbildungsIamMemRequest }}
            limits:
              cpu: {{ .Values.dbildungsIamCpuMax }}
              memory: {{ .Values.dbildungsIamMemMax }}
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              port: 8080
              scheme: 'HTTP'
              path: '/health'
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              port: 8080
              scheme: 'HTTP'
              path: '/health'
      restartPolicy: Always
      volumes:
        - name: config
          secret:
            secretName: {{ .Values.secrets.name | default (print .Release.Name "-secret") }}
