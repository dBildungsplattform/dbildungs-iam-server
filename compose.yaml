version: '3'

services:
  db:
    image: postgres:15.3-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=dbildungs-iam-server
  keycloak:
    image: ghcr.io/dbildungsplattform/dbildungs-iam:latest
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    entrypoint: '/opt/keycloak/bin/kc.sh start-dev'
    command:
      # Internal DB but still persisted in container
      - '--db=dev-file'
      # No caching
      - '--cache=local'
      # We have no way of checking for the health probe so we might just as well turn it off
      - '--health-enabled=false'
      # Import SPSH-Realm
      - '--import-realm'
    ports:
      - 8080:8080
      - 8443:8443
    volumes:
      - ./config/dev-realm-spsh.json:/opt/keycloak/data/import/realm.json
      - source: "${THEMES_DIR:-keycloak/themes}"
        target: "/opt/keycloak/themes"
        type: bind
  redis:
    image: redis:7.2.2
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    ports:
      - 6379:6379
    command: [ "redis-server",
               "--requirepass password",
               "--port 6379",
               "--bind 0.0.0.0",
               "--cluster-enabled yes",
               "--cluster-config-file nodes.conf",
               "--cluster-node-timeout 5000",
               "--cluster-announce-ip 172.38.0.1${port}",
               "--cluster-announce-port 6379",
               "--cluster-announce-bus-port 16379",
               "--appendonly yes"
    ]
  backend:
    profiles:
      - full-backend
    image: ghcr.io/dbildungsplattform/dbildungs-iam-server
    build:
      context: .
    depends_on:
      keycloak:
        condition: service_started
      db:
        condition: service_started
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: dev
      DEPLOY_STAGE: dev
    network_mode: host
    volumes:
      - source: 'config'
        target: '/app/config'
        type: bind
  db-init:
    profiles:
      - db-init
    image: ghcr.io/dbildungsplattform/dbildungs-iam-server
    build:
      context: .
    depends_on:
      - db
    environment:
      NODE_ENV: dev
      DEPLOY_STAGE: dev
    command: [ 'node', 'dist/src/console/main.js', 'db', 'init' ]
    volumes:
      - source: 'config'
        target: '/app/config'
        type: bind
