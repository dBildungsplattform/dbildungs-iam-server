nameOverride: ""
fullnameOverride: ""
namespaceOverride: ""

backendHostname: ""
keycloakHostname: ""

containerSecurityContext:
  enabled: true
  runAsUser: 1000
  runAsNonRoot: true
  privileged: false
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]
  seccompProfile:
    type: "RuntimeDefault"

restartPolicy: Always
environment: dev

database:
  name: ""
  host: ""
  password: ""
  username: ""

auth:
   # existingSecret: Refers to a secret already present in the cluster, which is required.
  existingSecret: ""
  secretName: dbildungs-iam-server
  keycloak_adminSecret: ""
  keycloak_clientSecret: ""
  secrets_json: ""
  frontend_sessionSecret: ""


backend:
  replicaCount: 1
  image:
    repository: ghcr.io/dbildungsplattform/dbildungs-iam-server
    tag: ""
    pullPolicy: Always
  ingress:
    enabled: true
    ingressClassName: nginx  
    pathType: Prefix  
    portnumber: 80 
    automountServiceAccountToken: false
    paths: 
     - /api
     - /docs
     - /docs-json
     - /docs-yaml
  containerPorts:
    http: 8080
  service:
    type: ClusterIP
    ports: 
      http: 80
  volumeMounts: 
  - mountPath: /app/config/config.json
    subPath: config-json
    name: config-volume
    readOnly: true
  - mountPath: /app/config/secrets.json
    subPath: secrets-json
    name: secret-volume
  extraVolumes: []
  extraVolumeMounts: []
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    httpGet:
      scheme: 'HTTP'
      port: 8080
      path: '/health'
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    httpGet:
      scheme: 'HTTP'
      port: 8080
      path: '/health'
  dbseeding:
    enabled: true
    command: [ "node", "dist/src/console/main.js", "db", "seed", "dev", "" ]
  resources:
    limits:
      cpu: 2
      memory: 4G
    requests:
      cpu: 200m
      memory: 200Mi 
  serviceMonitor:
    enabled: true
    endpoints:
      - port: "web" 


redis:
  image:
    name: redis
    repository: redis
    tag: "7.2.4"
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 2
      memory: 4G
    requests:
      cpu: 200m
      memory: 200Mi
  extraVolumes: []
  extraVolumeMounts: []
  service: 
    type: ClusterIP
  containerPorts:
    redis: 6379
  service:
    type: ClusterIP
    ports: 
      redis: 6379
  args:
    - "/data/tls/redis.conf"
  livenessProbe:
    enabled: true
    tcpSocket:
      port: 6379
    initialDelaySeconds: 15
    timeoutSeconds: 2
  readinessProbe:
    enabled: true
    tcpSocket:
      port: 6379
    initialDelaySeconds: 5
    timeoutSeconds: 1
  startupProbe:
    enabled: true
    tcpSocket:
      port: 6379
    failureThreshold: 30
    periodSeconds: 10

