apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "common.names.name" . }}-ldap
  namespace: {{ template "common.names.namespace" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: server-ldap
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "common.names.name" . }}
      app.kubernetes.io/component: server-ldap
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        {{- include "common.labels" . | nindent 8 }}
        app.kubernetes.io/component: server-ldap
    spec:
      containers:
        - name: openldap
          image: "{{ .Values.ldap.image.repository }}:{{ .Values.ldap.image.tag }}"
          imagePullPolicy: { { .Values.ldap.image.pullPolicy } }
          securityContext: { { - omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 } }
          args: [ "--copy-service", "--loglevel", "debug" ]
          volumeMounts:
            - name: ldif-volume
              mountPath: /container/service/slapd/assets/config/bootstrap/ldif/custom
            - name: ldap-certs
              mountPath: /container/service/slapd/assets/certs
          ports:
            - name: openldap
              containerPort: {{ .Values.ldap.service.ports.ldap }}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ template "common.names.name" . }}-ldap
      volumes:
        - name: ldif-volume
          configMap:
            name: {{ template "common.names.name" . }}-ldif
        - name: ldap-certs
          hostPath:
            path: "/data/ldap/certs"
      restartPolicy: {{ .Values.restartPolicy }}
